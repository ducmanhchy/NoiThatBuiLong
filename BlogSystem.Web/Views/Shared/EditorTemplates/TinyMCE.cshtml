<script src="~/Scripts/tinymce/tinymce.min.js"></script>

<script>
    tinymce.init({
        selector: "textarea.tinymce-editor",
        height: 250,
        theme: "modern",
        language: 'vi_VN',
        plugins: [
            "advlist autolink lists link image charmap print preview hr anchor pagebreak code paste",
            "searchreplace wordcount visualblocks visualchars code fullscreen",
            "insertdatetime media nonbreaking save table contextmenu directionality",
            "emoticons template paste textcolor colorpicker textpattern imagetools codesample toc help"
        ],
        toolbar1: "undo redo | insert | styleselect | fontselect | fontsizeselect | charmap | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | code",
        toolbar2: "print preview media | forecolor backcolor emoticons | codesample help",
        /* enable title field in the Image dialog*/
        image_title: true,
        /* enable automatic uploads of images represented by blob or data URIs*/
        automatic_uploads: true,
        /*
          URL of our upload handler (for more details check: https://www.tiny.cloud/docs/configure/file-image-upload/#images_upload_url)
          images_upload_url: 'postAcceptor.php',
          here we add custom filepicker only to Image dialog
        */
        images_upload_url: '/UploadedFiles/CKEDITOR/',
        file_picker_types: 'image',
        //file_picker_types: 'file image media',
        /* and here's our custom image picker*/
        file_picker_callback: function (cb, value, meta) {
            // Provide file and text for the link dialog
            //if (meta.filetype == 'file') {
            //    cb('mypage.html', { text: 'My text' });
            //}

            // Provide image and alt text for the image dialog
            //if (meta.filetype == 'image') {
            //    cb('myimage.jpg', { alt: 'My alt text' });
            //}

            // Provide alternative source and posted for the media dialog
            //if (meta.filetype == 'media') {
            //    cb('movie.mp4', { source2: 'alt.ogg', poster: 'image.jpg' });
            //}

            var input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');

            /*
              Note: In modern browsers input[type="file"] is functional without
              even adding it to the DOM, but that might not be the case in some older
              or quirky browsers like IE, so you might want to add it to the DOM
              just in case, and visually hide it. And do not forget do remove it
              once you do not need it anymore.
            */

            input.onchange = function () {
                var file = this.files[0];

                var reader = new FileReader();
                reader.onload = function () {
                    /*
                      Note: Now we need to register the blob in TinyMCEs image blob
                      registry. In the next release this part hopefully won't be
                      necessary, as we are looking to handle it internally.
                    */
                    var id = 'blobid' + (new Date()).getTime();
                    var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                    var base64 = reader.result.split(',')[1];
                    var blobInfo = blobCache.create(id, file, base64);
                    blobCache.add(blobInfo);

                    /* call the callback and populate the Title field with the file name */
                    cb(blobInfo.blobUri(), { title: file.name });
                };
                reader.readAsDataURL(file);
            };

            input.click();
        },
        content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }',
        image_advtab: true
    });

    function example_image_upload_handler(blobInfo, success, failure, progress) {
        var xhr, formData;

        xhr = new XMLHttpRequest();
        xhr.withCredentials = false;
        xhr.open('POST', 'postAcceptor.php');

        xhr.upload.onprogress = function (e) {
            progress(e.loaded / e.total * 100);
        };

        xhr.onload = function () {
            var json;

            if (xhr.status === 403) {
                failure('HTTP Error: ' + xhr.status, { remove: true });
                return;
            }

            if (xhr.status < 200 || xhr.status >= 300) {
                failure('HTTP Error: ' + xhr.status);
                return;
            }

            json = JSON.parse(xhr.responseText);

            if (!json || typeof json.location != 'string') {
                failure('Invalid JSON: ' + xhr.responseText);
                return;
            }

            success(json.location);
        };

        xhr.onerror = function () {
            failure('Image upload failed due to a XHR Transport error. Code: ' + xhr.status);
        };

        formData = new FormData();
        formData.append('file', blobInfo.blob(), blobInfo.filename());

        xhr.send(formData);
    };
</script>

<textarea name="@ViewData.TemplateInfo.HtmlFieldPrefix" class="form-control tinymce-editor">
    @ViewData.TemplateInfo.FormattedModelValue
</textarea>